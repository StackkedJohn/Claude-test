FROM node:18-alpine

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies (including dev dependencies for ts-node)
RUN npm install

# Copy source code
COPY . .

# Create simple server if main doesn't exist
RUN if [ ! -f "src/server.ts" ]; then \
    mkdir -p src && \
    echo "import express from 'express';\nimport cors from 'cors';\nconst app = express();\nconst PORT = process.env.PORT || 5000;\napp.use(cors());\napp.use(express.json());\napp.get('/health', (req, res) => res.json({ status: 'healthy', service: 'icepaca-backend' }));\napp.get('/api/products', (req, res) => res.json({ products: [{ id: 1, name: 'Small Ice Pack', price: 19.99, description: 'Perfect for lunch boxes', image: 'https://via.placeholder.com/400x400/4A90E2/FFFFFF?text=Small+Ice+Pack', inStock: true }, { id: 2, name: 'Medium Ice Pack', price: 29.99, description: 'Ideal for day trips', image: 'https://via.placeholder.com/400x400/50C878/FFFFFF?text=Medium+Ice+Pack', inStock: true }, { id: 3, name: 'Large Ice Pack', price: 39.99, description: 'Great for extended trips', image: 'https://via.placeholder.com/400x400/FF6B6B/FFFFFF?text=Large+Ice+Pack', inStock: true }] }));\napp.listen(PORT, () => console.log(\`ðŸš€ ICEPACA Backend running on port \${PORT}\`));" > src/server.ts; \
    fi

# Build TypeScript (if tsconfig exists)
RUN if [ -f "tsconfig.json" ]; then npm run build || npx tsc || echo "Build completed"; fi

# Expose port
EXPOSE 5000

# Start the application
CMD ["npm", "run", "dev"]